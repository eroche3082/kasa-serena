FASE 8 â€“ DASHBOARD DE USUARIO
ðŸŽ¯ Objetivo de la Fase 8:
Crear una pÃ¡gina de Dashboard de Usuario donde los usuarios autenticados puedan ver y gestionar sus proyectos (Smart Containers, Piscinas, etc.), ver cotizaciones y tener opciones de editar o eliminar proyectos.

ðŸ§  PROMPT COMPLETO â€“ FASE 8: DASHBOARD DE USUARIO
md
Copiar
Editar
# ðŸ§  FASE 8 â€“ DASHBOARD DE USUARIO

## ðŸŽ¯ Objetivo:
Desarrollar una pÃ¡gina de **Dashboard** donde el usuario pueda:
- Ver todos sus proyectos generados (Smart Containers, Piscinas Modulares, etc.)
- Ver las cotizaciones asociadas
- Tener la opciÃ³n de **editar** o **eliminar** proyectos existentes

---

## âœ… PASO 1 â€“ Crear la PÃ¡gina de Dashboard

1. Verificar que la ruta `/dashboard` estÃ© configurada en `client/src/pages/DashboardPage.tsx`.

2. **Componente `DashboardPage.tsx`**:
   - Mostrar una **lista de proyectos** guardados (smart containers, piscinas modulares, etc.).
   - Incluir **botones de acciÃ³n** para cada proyecto:
     - **Ver detalles**: Lleva a la pÃ¡gina del proyecto especÃ­fico.
     - **Editar**: Permite editar los parÃ¡metros del proyecto.
     - **Eliminar**: Elimina el proyecto de la base de datos.

3. **VisualizaciÃ³n de Cotizaciones**:
   - Mostrar una **tabla** de cotizaciones con:
     - Nombre del proyecto
     - Estado (pendiente, aceptado)
     - Fecha de solicitud
   - BotÃ³n para **ver detalles de cotizaciÃ³n**.

---

## âœ… PASO 2 â€“ Backend: Rutas de Proyectos y Cotizaciones

1. Verificar las siguientes rutas en `server/routes.ts`:

```ts
// Obtener proyectos del usuario actual
app.get("/api/projects/user", getUserProjects);

// Crear un proyecto
app.post("/api/projects", createProject);

// Eliminar un proyecto
app.delete("/api/projects/:id", deleteProject);

// Obtener cotizaciones del usuario
app.get("/api/quotes", getUserQuotes);
Verificar que las funciones en server/projects.ts y server/quotes.ts estÃ©n bien definidas para manejar obtener, crear y eliminar proyectos y cotizaciones.

âœ… PASO 3 â€“ Interfaz del Dashboard
Visualizar los proyectos:

Crear una tabla o lista para los proyectos guardados:

Nombre del proyecto

Estado

Fecha de creaciÃ³n

Enlace para ver los detalles

Botones de acciÃ³n:

AÃ±adir botones de editar y eliminar proyectos.

Mostrar cotizaciones:

Agregar una secciÃ³n de cotizaciones.

Mostrar las cotizaciones asociadas a cada proyecto, con botones para ver detalles.

Estilo visual:

Usar un diseÃ±o limpio, con clases container mx-auto px-4 md:px-8 para un espaciado adecuado.

Tarjetas o tablas con bordes suaves y sombreado para cada proyecto/cotizaciÃ³n.

âœ… PASO 4 â€“ Funcionalidad de EdiciÃ³n y EliminaciÃ³n de Proyectos
EdiciÃ³n de proyectos:

Redirigir al usuario a la pÃ¡gina de ediciÃ³n cuando haga clic en "Editar".

Permitir que el usuario cambie los parÃ¡metros del proyecto.

EliminaciÃ³n de proyectos:

Preguntar al usuario si estÃ¡ seguro de eliminar el proyecto antes de proceder.

Eliminar el proyecto de la base de datos y refrescar la lista de proyectos.

âœ… PASO 5 â€“ VerificaciÃ³n
Los proyectos guardados deben mostrarse correctamente.

El botÃ³n de editar debe redirigir a la pÃ¡gina de ediciÃ³n.

El botÃ³n de eliminar debe eliminar correctamente el proyecto.

Las cotizaciones deben mostrarse bien con los detalles correctos.

La pÃ¡gina debe ser responsiva en mÃ³vil, tablet y escritorio.

ðŸ›‘ INSTRUCCIÃ“N PARA EL AGENTE
ðŸ‘‰ REPLY "YES" OR "NO" ONCE YOU COMPLETE AND VERIFY FASE 8.
ðŸ‘‰ LOG FASE 8 AS COMPLETE IN /agent-checklist.
ðŸ‘‰ UPLOAD A SCREENSHOT OF THE USER DASHBOARD PAGE TO /internal-map.

yaml
Copiar
Editar
