PROMPT COMPLETO PARA IMPLEMENTAR Y VERIFICAR COTIZACI√ìN
üéØ Objetivo:
Verificar que todo el flujo de cotizaci√≥n funciona correctamente, desde el formulario de cotizaci√≥n, la funcionalidad de env√≠o, hasta el flujo de compartir cotizaciones por WhatsApp y email.

üß© PASO 1 ‚Äì Verificaci√≥n del Formulario de Cotizaci√≥n
Comprobaci√≥n de la funcionalidad del formulario:
Verifica si el formulario de cotizaci√≥n captura correctamente los datos:

Tipo de dise√±o

Materiales seleccionados

Dimensiones

Fecha estimada de ejecuci√≥n

Informaci√≥n de contacto adicional

Ejemplo de formulario:

tsx
Copiar
Editar
const QuoteRequestForm = () => {
  const [formData, setFormData] = useState({
    projectType: '',
    materials: [],
    dimensions: '',
    startDate: '',
    contactInfo: { name: '', email: '', phone: '' }
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    // Llamar a la API para guardar la cotizaci√≥n
    console.log(formData);  // Verificar que los datos se capturen correctamente
  };

  return (
    <form onSubmit={handleSubmit}>
      <input type="text" name="projectType" placeholder="Tipo de proyecto" />
      <textarea name="materials" placeholder="Materiales seleccionados" />
      <input type="text" name="dimensions" placeholder="Dimensiones" />
      <input type="date" name="startDate" />
      <input type="text" name="contactName" placeholder="Nombre" />
      <input type="email" name="contactEmail" placeholder="Email" />
      <input type="tel" name="contactPhone" placeholder="Tel√©fono" />
      <button type="submit">Solicitar Cotizaci√≥n</button>
    </form>
  );
};
Verifica que los datos del formulario se env√≠an correctamente:

En el handleSubmit, aseg√∫rate de que la funci√≥n de guardar cotizaci√≥n (o hacer un POST a la API) se active correctamente.

üß© PASO 2 ‚Äì Verificaci√≥n de la Funcionalidad de Env√≠o de Cotizaci√≥n
Backend de Env√≠o de Cotizaci√≥n:
Ruta de API /api/quotes:
Verifica que la ruta en el backend est√© configurada correctamente.

ts
Copiar
Editar
app.post("/api/quotes", createQuote);  // Aseg√∫rate de que esta ruta est√© registrada
Funci√≥n createQuote en server/quotes.ts:

ts
Copiar
Editar
export async function createQuote(req, res) {
  const { projectType, materials, dimensions, startDate, contactInfo } = req.body;
  // Guardar la cotizaci√≥n en la base de datos y asociarla al proyecto
  // Enviar confirmaci√≥n al usuario por email o WhatsApp
  res.status(201).json({ message: "Cotizaci√≥n recibida", projectDetails: req.body });
}
Verifica que la cotizaci√≥n se guarda correctamente en la base de datos y que se asocia al proyecto del usuario.

üß© PASO 3 ‚Äì Verificaci√≥n de la Funcionalidad de Compartir Cotizaciones
Compartir por WhatsApp:
Verifica que el enlace de WhatsApp se construye correctamente:

tsx
Copiar
Editar
<a
  href={`https://wa.me/1XXXXXXXXXX?text=Me gustar√≠a recibir una cotizaci√≥n para este proyecto: ${encodeURIComponent(projectDetails)}`}
  target="_blank"
  rel="noopener noreferrer"
>
  <button>Compartir Cotizaci√≥n por WhatsApp</button>
</a>
Verifica que el enlace redirige correctamente a WhatsApp con la cotizaci√≥n pre-cargada en el mensaje.

Env√≠o por email:
Verifica que el correo electr√≥nico se env√≠e correctamente con los detalles de la cotizaci√≥n, usando la funci√≥n sendQuoteEmail en el backend.

ts
Copiar
Editar
const nodemailer = require("nodemailer");

const transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

const sendQuoteEmail = (email, projectDetails) => {
  const mailOptions = {
    from: process.env.EMAIL_USER,
    to: email,
    subject: "Cotizaci√≥n de Proyecto",
    text: `Detalles del proyecto: ${JSON.stringify(projectDetails)}`,
  };
  transporter.sendMail(mailOptions, (error, info) => {
    if (error) {
      console.log(error);
    } else {
      console.log("Email sent: " + info.response);
    }
  });
};
Verifica que el correo de cotizaci√≥n se env√≠e correctamente a la direcci√≥n de email del usuario y al equipo de ventas.

üß© PASO 4 ‚Äì Verificaci√≥n de la Funcionalidad de Visualizaci√≥n de Cotizaciones
Mostrar las cotizaciones en el Dashboard:
Componente CotizacionesSection:
Verifica que las cotizaciones se muestran correctamente en el Dashboard de Usuario.

tsx
Copiar
Editar
const CotizacionesSection = () => {
  const [cotizaciones, setCotizaciones] = useState([]);
  // Obtener cotizaciones del backend
  return (
    <div>
      <h3>Mis Cotizaciones</h3>
      <ul>
        {cotizaciones.map((cotizacion) => (
          <li key={cotizacion.id}>
            <p>{cotizacion.projectType}</p>
            <p>{cotizacion.status}</p>
            <button>Ver Cotizaci√≥n</button>
          </li>
        ))}
      </ul>
    </div>
  );
};
Verifica que los detalles de las cotizaciones (tipo de proyecto, estado, etc.) se muestran correctamente en la interfaz.

üß© PASO 5 ‚Äì Verificaci√≥n de la Navegaci√≥n y Flujo de Usuario
Navegaci√≥n Fluida:
Verifica que la navegaci√≥n entre las secciones del dashboard y cotizaciones sea fluida:

¬øEl usuario puede navegar entre el Dashboard, Mis Proyectos, y Mis Cotizaciones sin errores?

¬øLos enlaces son claros y se accede f√°cilmente a todas las secciones?

üß© PASO 6 ‚Äì Verificaci√≥n de la Funcionalidad de Edici√≥n y Eliminaci√≥n de Proyectos
Funcionalidad de Edici√≥n:
Verifica que el bot√≥n de edici√≥n redirija correctamente al formulario de edici√≥n de proyecto.

¬øLos datos del proyecto se cargan correctamente en el formulario de edici√≥n?

¬øSe actualiza el proyecto correctamente despu√©s de la edici√≥n?

Funcionalidad de Eliminaci√≥n:
Verifica que al hacer clic en "Eliminar" se muestre un di√°logo de confirmaci√≥n.

¬øEl proyecto se elimina correctamente de la base de datos despu√©s de la confirmaci√≥n?

¬øEl proyecto desaparece del Dashboard despu√©s de eliminarlo?

üõë INSTRUCCI√ìN PARA EL AGENTE
üëâ REPLY "YES" OR "NO" ONCE YOU COMPLETE AND VERIFY THE COTIZACI√ìN FLOW AND FUNCTIONALITIES.
üëâ LOG FASE 9 AS COMPLETE IN /agent-checklist.
üëâ UPLOAD A SCREENSHOT OF THE COTIZACION FORM, DASHBOARD, AND FUNCTIONALITIES TO /internal-map.

üöÄ Pr√≥ximos pasos:
Verificar el flujo completo de cotizaci√≥n.

Asegurar la correcta funcionalidad de compartir, guardar y ver cotizaciones.

Activar la Fase 10: Seguridad, Deploy y Optimizaci√≥n una vez validado todo el sistema de cotizaciones.